[package]
name = "bevy_game_dev"
version = "1.0.0"
edition = "2021"
description = "First-class Bevy game development with AI generation and PyO3 bindings"
authors = ["AI Game Dev Team"]
license = "MIT"
repository = "https://github.com/ai-game-dev/bevy-game-dev"
keywords = ["bevy", "game-development", "ai", "ecs", "pyo3"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# Core AI functionality via PyO3 bindings
pyo3 = { workspace = true, features = ["extension-module"] }
ai-game-dev = { workspace = true }

# Bevy engine with full features
bevy = { version = "0.14", features = [
    "bevy_asset",
    "bevy_audio",
    "bevy_core_pipeline", 
    "bevy_render",
    "bevy_sprite",
    "bevy_text",
    "bevy_ui",
    "bevy_winit",
    "bevy_scene",
    "bevy_gltf",
    "png",
    "vorbis",
] }

# Serialization and async
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { workspace = true }
anyhow = { workspace = true }

# Bevy-specific utilities
bevy_rapier3d = { version = "0.27", optional = true }
bevy_inspector_egui = { version = "0.25", optional = true }
leafwing-input-manager = { version = "0.14", optional = true }

[features]
default = ["physics", "inspector", "input_manager"]
physics = ["bevy_rapier3d"]
inspector = ["bevy_inspector_egui"] 
input_manager = ["leafwing-input-manager"]
python_bindings = []

[dev-dependencies]
criterion = "0.5"

[[bench]]
name = "ecs_performance"
harness = false

[[example]]
name = "ai_generated_rts"
path = "examples/ai_generated_rts.rs"

[[example]]
name = "python_integration"
path = "examples/python_integration.rs"