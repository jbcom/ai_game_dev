# NeoTokyo Code Academy Game Specification
# This is the internal game spec for our educational RPG

[game]
title = "NeoTokyo Code Academy: The Binary Rebellion"
engine = "pygame"
type = "educational_rpg"
version = "1.0.0"
save_path = "games/pygame/neotokyo_code_academy"  # Relative to project root

[game.description]
short = "Learn programming through a cyberpunk RPG adventure"
full = """
In the year 2089, NeoTokyo is ruled by the malevolent AI Corporation. 
As a student at the underground Code Academy, you must learn programming 
to fight back against the digital oppression. Master variables, loops, 
functions, and classes to become a true Code Warrior!
"""

[game.features]
combat_system = "turn-based with code challenges"
progression_system = "unlock abilities through learning concepts"
dialogue_system = "interactive conversations teaching programming"
exploration = "open world with coding puzzles"
save_system = "checkpoint-based with lesson progress tracking"

[game.educational]
mode = "progressive"
concepts = [
    "variables",
    "data_types", 
    "conditionals",
    "loops",
    "functions",
    "arrays",
    "objects", 
    "classes",
    "inheritance",
    "algorithms",
    "debugging"
]
difficulty_scaling = true
hints_enabled = true
practice_mode = true

[game.assets]
# Use paths relative to public/static/assets/
sprites.player = "characters/professor_pixel.png"
sprites.enemies = [
    "generated/sprites/game_elements/enemy_slime.png",
    "generated/sprites/game_elements/bug_creature.png",
    "generated/sprites/game_elements/error_demon.png"
]
sprites.npcs = [
    "generated/sprites/characters/mentor_ai.png",
    "generated/sprites/characters/student_coder.png",
    "generated/sprites/characters/bug_boss.png"
]
sprites.items = [
    "generated/sprites/game_elements/collectible_gem.png",
    "generated/sprites/game_elements/powerup_star.png",
    "generated/sprites/game_elements/health_potion.png"
]
sprites.weapons = [
    "generated/sprites/weapons/laser_beam.png",
    "generated/sprites/weapons/plasma_sword.png", 
    "generated/sprites/weapons/shield_bubble.png"
]
sprites.effects = [
    "generated/sprites/effects/explosion.png",
    "generated/sprites/effects/sparkle.png",
    "generated/sprites/effects/damage_flash.png"
]

backgrounds = [
    "generated/backgrounds/environments/academy_classroom.png",
    "generated/backgrounds/environments/digital_realm.png",
    "generated/backgrounds/environments/cyberpunk_city.png",
    "generated/backgrounds/environments/boss_arena.png"
]

audio.ui = {
    click = "audio/button_click_futuristic.wav",
    hover = "audio/hover_beep_cyberpunk.wav",
    success = "audio/success_ding_pleasant.wav",
    error = "audio/error_buzz_warning.wav",
    notification = "audio/notification_chime_tech.wav"
}

audio.effects = {
    jump = "generated/audio/gameplay/jump.wav",
    collect = "generated/audio/gameplay/collect.wav",
    damage = "generated/audio/gameplay/damage.wav", 
    levelup = "generated/audio/gameplay/levelup.wav",
    shoot = "generated/audio/combat/shoot.wav",
    explosion = "generated/audio/combat/explosion.wav",
    dialogue = "generated/audio/ui/dialogue_beep.wav"
}

audio.music = {
    menu = "generated/audio/music/menu_theme.mp3",
    exploration = "generated/audio/music/exploration_theme.mp3",
    battle = "generated/audio/music/battle_theme.mp3",
    victory = "generated/audio/music/victory_theme.mp3"
}

fonts = [
    "fonts/inter-400.woff2",
    "fonts/inter-600.woff2", 
    "fonts/jetbrains-mono-400.woff2"
]

ui.frames = ["frames/tech-frame.png"]
ui.panels = ["textures/glass-panel.png"]
ui.overlays = ["textures/hexagon-overlay.png"]

[game.characters]
[game.characters.player]
name = "Pixel"
class = "Student Coder"
starting_level = 1
starting_hp = 100
starting_skills = ["basic_syntax", "print_statement"]

[game.characters.mentor]
name = "Master Compiler"
role = "Guide and teacher"
location = "Academy Hub"

[game.characters.antagonist]
name = "CEO Null Pointer"
role = "Final boss"
location = "Binary Tower"

[[game.characters.enemies]]
name = "Syntax Error"
type = "bug"
level = 1
drops = ["syntax_token"]

[[game.characters.enemies]]
name = "Runtime Exception"
type = "error"
level = 3
drops = ["debug_crystal"]

[[game.characters.enemies]]
name = "Memory Leak"
type = "glitch"
level = 5
drops = ["garbage_collector"]

[game.levels]
[game.levels.hub]
name = "Academy Hub"
description = "Underground school hidden beneath NeoTokyo's data streams"
objectives = ["Meet fellow students", "Access training rooms", "Unlock new areas"]
npcs = ["Master Compiler", "Syntax Error", "The Garbage Collector", "OOP Olivia", "Functional Fred"]
features = ["Day/night cycle", "Dynamic student population", "Holographic boards"]
ambient_audio = ["typing_mechanical_keyboard", "electronic_hum"]

[game.levels.tutorial]
name = "Academy Training Grounds"
description = "Holographic simulation room for basic training"
objectives = ["Learn movement", "Practice basic attacks", "Understand UI", "Meet Professor Pixel"]
enemies = []
npcs = ["Master Compiler", "Tutorial Bot"]
interactive_elements = ["Code terminals", "Practice dummies", "Hint holograms"]

[game.levels.level1]
name = "Variable Valley"
description = "A digital valley that reshapes based on data types"
objectives = ["Understand variables", "Defeat 5 Syntax Errors", "Collect Variable Gems", "Solve type puzzles"]
enemies = ["Syntax Error", "Type Mismatch", "Null Reference"]
boss = "Uninitialized Variable"
concepts_taught = ["variables", "data_types", "assignment", "scope"]
procedural_elements = ["Valley shape changes with variable types", "Color-coded regions for data types"]
music = "dynamic_variable_theme"  # Adds instruments as variables are assigned

[game.levels.level2]
name = "Loop Lake"
description = "Circular lake with islands representing different loop types"
objectives = ["Master loops", "Solve iteration puzzles", "Break infinite loops", "Navigate loop islands"]
enemies = ["Infinite Loop", "Off-by-One Error", "Iterator Imp"]
boss = "While True Monster"
concepts_taught = ["for_loops", "while_loops", "break_continue", "nested_loops"]
puzzle_variants = ["while_island", "for_island", "do_while_island"]
special_mechanics = ["Water level rises/falls with loop iterations", "Music literally loops"]

[game.levels.level3]
name = "Function Forest"
description = "Mystical forest where trees are function call stacks"
objectives = ["Create functions", "Use parameters", "Return values", "Solve the Recursive Riddle"]
enemies = ["Undefined Function", "Wrong Arguments", "Scope Creeper"]
boss = "Recursive Nightmare"
concepts_taught = ["functions", "parameters", "return_values", "recursion", "scope"]
interactive = ["Function trees you can climb", "Parameter passing puzzles", "Return value bridges"]

[game.levels.level4]
name = "Class Castle"
description = "Object-oriented fortress with inheritance hierarchies"
objectives = ["Design classes", "Use inheritance", "Implement polymorphism", "Navigate the Object Maze"]
enemies = ["Abstract Error", "Private Variable", "Null Pointer Exception"]
boss = "Singleton Overlord"
concepts_taught = ["classes", "objects", "inheritance", "encapsulation", "polymorphism"]
architecture = ["Inheritance towers", "Encapsulation walls", "Polymorphic shape-shifters"]

[game.levels.final]
name = "Binary Tower"
description = "The AI Corporation's central processing spire"
objectives = ["Apply all knowledge", "Defeat CEO Null Pointer", "Save NeoTokyo", "Debug the core"]
enemies = ["Memory Leak", "Stack Overflow", "Race Condition", "Deadlock Demon"]
boss = "CEO Null Pointer"
concepts_tested = ["all"]
epic_moments = ["Code rain sequence", "Binary choice chambers", "Final debug challenge"]

[game.mechanics]
[game.mechanics.combat]
type = "turn_based"
actions = ["attack", "defend", "code_cast", "debug"]
code_challenges = true
timer_mode = false

[game.mechanics.progression]
experience_system = "concept_based"
skill_tree = true
ability_unlocks = [
    {level = 1, ability = "print_attack"},
    {level = 3, ability = "loop_shield"},
    {level = 5, ability = "function_call"},
    {level = 7, ability = "class_instantiate"},
    {level = 10, ability = "polymorphic_strike"}
]

[game.mechanics.puzzles]
types = ["code_completion", "bug_fixing", "logic_gates", "algorithm_tracing"]
difficulty_scaling = true
hint_system = true

[game.quests]
[game.quests.main]
# Main quest line seeded from cyberpunk classics
quest_line = "The Binary Rebellion"
literary_seeds = ["Neuromancer", "Snow Crash", "Do Androids Dream of Electric Sheep"]
chapters = [
    {id = "awakening", name = "Digital Awakening", level_required = 1},
    {id = "first_hack", name = "Your First Hack", level_required = 2},
    {id = "network_dive", name = "Into the Network", level_required = 5},
    {id = "corporate_secrets", name = "Corporate Secrets", level_required = 8},
    {id = "final_liberation", name = "Liberation.exe", level_required = 10}
]

[game.quests.side]
debugging_detective = {
    name = "The Debugging Detective"
    description = "Solve mysterious bugs haunting the academy"
    literary_seeds = ["Sherlock Holmes", "The Maltese Falcon"]
    quest_type = "mystery"
    rewards = ["Detective's Debugger", "Magnifying Monocle"]
}

variable_ventures = {
    name = "Variable Valley Ventures"
    description = "Tutorial quests teaching programming concepts"
    quest_type = "educational"
    dynamic = true  # Generates new quests based on player progress
}

recursive_riddle = {
    name = "The Recursive Riddle"
    description = "A quest that references itself"
    quest_type = "meta"
    special_mechanics = ["Quest objectives change based on how many times you've attempted it"]
}

garbage_collection = {
    name = "The Garbage Collector's Secret"
    description = "Help the mysterious janitor clean up memory leaks"
    quest_giver = "The Garbage Collector"
    rewards = ["Memory Optimization skill", "Leak Detector tool"]
}

[game.npcs]
# Rich NPCs with full dialogue trees
[game.npcs.master_compiler]
name = "Master Compiler"
role = "Wise Mentor"
location = "Academy Hub"
dialogue_style = "philosophical"
topics = ["programming_philosophy", "optimization_wisdom", "debugging_zen"]
special_dialogue = {
    first_meeting = "Ah, another variable in the grand algorithm of life...",
    level_5 = "You're beginning to compile correctly, young coder.",
    final_battle = "Remember: even null pointers can point to truth."
}

[game.npcs.syntax_error]
name = "Syntax Error"
role = "Comic Relief"
location = "Wandering"
dialogue_style = "broken"
special_trait = "Speaks in actual syntax errors"
example_dialogue = [
    "Hello world); // Missing opening parenthesis!",
    "if (you.need_help) { // Unclosed bracket",
    "return friendship++ // Semicolon missing but heart present"
]

[game.npcs.garbage_collector]
name = "The Garbage Collector"
role = "Mysterious Guide"
location = "Hidden areas"
dialogue_style = "cryptic"
reveals = ["memory_management_secrets", "hidden_optimization_paths"]

[game.npcs.student_paradigms]
oop_olivia = {
    paradigm = "object_oriented",
    personality = "Everything has a class and purpose",
    teaches = ["inheritance", "encapsulation"]
}
functional_fred = {
    paradigm = "functional",
    personality = "Pure functions, no side effects in life",
    teaches = ["immutability", "higher_order_functions"]
}
procedural_pete = {
    paradigm = "procedural",
    personality = "Step by step, top to bottom",
    teaches = ["structured_programming", "flow_control"]
}

[game.dialogue]
format = "yarnspinner"
branching = true
educational_hints = true
character_portraits = true
dynamic_generation = true  # NPCs can generate new dialogue based on player actions
emotion_system = true  # NPCs remember how you treat them

[game.ui]
style = "cyberpunk"
theme_colors = {primary = "#00ffff", secondary = "#ff00ff", background = "#0a0a0a"}
animations = true
particle_effects = true