[tool.uv.workspace]
members = [
    "packages/ai_game_dev",
    "packages/ai_game_assets", 
    "packages/pygame_game_dev",
    "packages/arcade_game_dev",
    "packages/mcp_server",
    "web_portal"
]

[tool.uv]
dev-dependencies = [
    # Testing
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "pytest-benchmark>=4.0.0",
    
    # Static Analysis - Python
    "mypy>=1.0.0",
    "pylint>=2.17.0",
    "bandit>=1.7.5",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "ruff>=0.1.0",
    
    # Code Coverage & Quality
    "coverage[toml]>=7.3.0",
    "codecov>=2.1.13",
    "coverage-badge>=1.1.0",
    
    # Performance Analysis
    "py-spy>=0.3.14",
    "memory-profiler>=0.61.0",
    
    # GDScript Analysis
    "gdtoolkit>=4.2.0",
    
    # Build tools
    "pre-commit>=3.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
    
    # FastMCP for server
    "fastmcp>=2.12.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
extend-exclude = ["build", "dist"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pygame.*",
    "arcade.*",
    "music21.*",
    "torch.*",
    "transformers.*",
    "mesop.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=packages",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["packages"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
